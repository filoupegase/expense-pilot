/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthProfileRouteImport } from './routes/_auth/profile'
import { Route as AuthExpensesRouteImport } from './routes/_auth/expenses'
import { Route as AuthCreate_expenseRouteImport } from './routes/_auth/create_expense'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthProfileRoute = AuthProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)
const AuthExpensesRoute = AuthExpensesRouteImport.update({
  id: '/expenses',
  path: '/expenses',
  getParentRoute: () => AuthRoute,
} as any)
const AuthCreate_expenseRoute = AuthCreate_expenseRouteImport.update({
  id: '/create_expense',
  path: '/create_expense',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/create_expense': typeof AuthCreate_expenseRoute
  '/expenses': typeof AuthExpensesRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/create_expense': typeof AuthCreate_expenseRoute
  '/expenses': typeof AuthExpensesRoute
  '/profile': typeof AuthProfileRoute
  '/': typeof AuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/_auth/create_expense': typeof AuthCreate_expenseRoute
  '/_auth/expenses': typeof AuthExpensesRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/': typeof AuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/login'
    | '/create_expense'
    | '/expenses'
    | '/profile'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/login' | '/create_expense' | '/expenses' | '/profile' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/about'
    | '/login'
    | '/_auth/create_expense'
    | '/_auth/expenses'
    | '/_auth/profile'
    | '/_auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/expenses': {
      id: '/_auth/expenses'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof AuthExpensesRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/create_expense': {
      id: '/_auth/create_expense'
      path: '/create_expense'
      fullPath: '/create_expense'
      preLoaderRoute: typeof AuthCreate_expenseRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthCreate_expenseRoute: typeof AuthCreate_expenseRoute
  AuthExpensesRoute: typeof AuthExpensesRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthIndexRoute: typeof AuthIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthCreate_expenseRoute: AuthCreate_expenseRoute,
  AuthExpensesRoute: AuthExpensesRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthIndexRoute: AuthIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
